var searchIndex = new Map(JSON.parse('[["connect_four",{"t":"CHEECCCCFIIPPNNNNNNNNNNONNNNPFGPPONNNNNONNNNNNNNONNONNNNNNNNJFNNNNNNNNNONNONNNFNNNNHONNNNNNNOOONNNNN","n":["game","main","Game","Player","board","game","player","util","Board","BoardCell","BoardRow","None","Some","borrow","borrow_mut","display","from","get_diagonals_top_left_to_bottom_right","get_diagonals_top_right_to_bottom_left","into","is_board_full","new","place_token","rows","try_from","try_into","type_id","valid_move","Draw","Game","GameStatus","Ongoing","Win","board","borrow","","borrow_mut","","check_line","current_turn","find_winner","from","","get_valid_input","into","","new","next_turn","players","start","status","tokens_to_win","try_from","","try_into","","type_id","","validate_game_config","validate_players","NEXT_TOKEN","Player","borrow","borrow_mut","clone","clone_into","clone_to_uninit","eq","fmt","from","into","name","new","to_owned","token","try_from","try_into","type_id","Args","augment_args","augment_args_for_update","borrow","borrow_mut","clear_terminal","cols","command","command_for_update","from","from_arg_matches","from_arg_matches_mut","group_id","into","players","rows","tokens_to_win","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut"],"q":[[0,"connect_four"],[2,"connect_four::game"],[8,"connect_four::game::board"],[28,"connect_four::game::game"],[60,"connect_four::game::player"],[78,"connect_four::game::util"],[100,"alloc::string"],[101,"alloc::vec"],[102,"core::result"],[103,"core::any"],[104,"core::fmt"],[105,"core::convert"],[106,"clap_builder::builder::command"],[107,"clap_builder::parser::matches::arg_matches"],[108,"clap_builder"],[109,"clap_builder::util::id"],[110,"core::option"]],"i":"```````````l0h00000000000000An``00Al10100001001000000010101000``Ad000000000000000`Bj000`0000000000000000","f":"`{{}b}```````````{d{{d{c}}}{}}{{{d{f}}}{{d{fc}}}{}}{{{d{h}}}j}{cc{}}{{{d{h}}}{{n{{n{l}}}}}}0{{}c{}}{{{d{h}}}A`}{{AbAb}h}{{{d{fh}}AbAd}b}`{c{{Af{e}}}{}{}}{{}{{Af{c}}}{}}{dAh}{{{d{h}}Ab}A`}``````<<;;{{{d{{Aj{l}}}}Ab}l}`{{{d{Al}}}l};;{{{d{Al}}}Ab}::{{AbAbAb{n{Ad}}}Al}{{{d{fAl}}}b}`0{{{d{Al}}}An}`998877{{AbAbAb}{{Af{bj}}}}{{{d{{Aj{Ad}}}}}b}``{d{{d{c}}}{}}{{{d{f}}}{{d{fc}}}{}}{{{d{Ad}}}Ad}{{d{d{fc}}}b{}}{db}{{{d{Ad}}{d{Ad}}}A`}{{{d{Ad}}{d{fB`}}}Bb}{cc{}}{{}c{}}`{cAd{{Bd{j}}}}{dc{}}`{c{{Af{e}}}{}{}}{{}{{Af{c}}}{}}{dAh}`{BfBf}0>={{}b}`{{}Bf}09{{{d{Bh}}}{{Af{BjBl}}}}{{{d{fBh}}}{{Af{BjBl}}}}{{}{{C`{Bn}}}};```876{{{d{fBj}}{d{Bh}}}{{Af{bBl}}}}{{{d{fBj}}{d{fBh}}}{{Af{bBl}}}}","D":"G`","p":[[1,"unit"],[1,"reference"],[0,"mut"],[5,"Board",8],[5,"String",100],[8,"BoardCell",8],[5,"Vec",101],[1,"bool"],[1,"usize"],[5,"Player",60],[6,"Result",102],[5,"TypeId",103],[1,"slice"],[5,"Game",28],[6,"GameStatus",28],[5,"Formatter",104],[8,"Result",104],[10,"Into",105],[5,"Command",106],[5,"ArgMatches",107],[5,"Args",78],[8,"Error",108],[5,"Id",109],[6,"Option",110]],"r":[[2,28],[3,60]],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAACwADAABAAAAAwACAA4AAQAZAAIAIwADADUABQA/AAYASgAAAEwABwBWAAEAWQACAGAABAA="}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[3012]}